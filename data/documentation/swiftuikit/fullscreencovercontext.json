{"seeAlsoSections":[{"title":"Presentation","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertContext","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertContextFocusedValueKey","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertProvider","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContextFocusedValueKey","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverProvider","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetContext","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetContextFocusedValueKey","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetProvider"],"generated":true}],"schemaVersion":{"major":0,"minor":2,"patch":0},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"FullScreenCoverContext"}],"role":"symbol","title":"FullScreenCoverContext","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FullScreenCoverContext"}],"symbolKind":"class","externalID":"s:10SwiftUIKit22FullScreenCoverContextC","modules":[{"name":"SwiftUIKit"}],"platforms":[{"beta":false,"unavailable":false,"name":"iOS","introducedAt":"14.0","deprecated":false},{"beta":false,"unavailable":false,"name":"tvOS","introducedAt":"14.0","deprecated":false},{"beta":false,"unavailable":false,"name":"watchOS","introducedAt":"7.0","deprecated":false}]},"abstract":[{"type":"text","text":"This context can be used to present any "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":" view as a"},{"type":"text","text":" "},{"type":"text","text":"full screen cover. You can either present standard views or"},{"type":"text","text":" "},{"type":"text","text":"anything that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverProvider"},{"type":"text","text":"."}],"sections":[],"identifier":{"url":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContext","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/SwiftUIKit\/7Combine16ObservableObjectP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContext\/init()"]},{"title":"Instance Methods","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContext\/present(_:)-4azb5","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContext\/present(_:)-8uwec"]}],"variants":[{"paths":["\/documentation\/swiftuikit\/fullscreencovercontext"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FullScreenCoverContext"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, you can create an enum where all cases return"},{"type":"text","text":" "},{"type":"text","text":"a view and have it implement "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverProvider"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use this class, create a "},{"type":"codeVoice","code":"@StateObject"},{"type":"text","text":" instance in your"},{"type":"text","text":" "},{"type":"text","text":"presenting view, then bind the context to the view with the"},{"type":"text","text":" "},{"type":"text","text":"context-specific modifier."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can now use the "},{"type":"codeVoice","code":"present"},{"type":"text","text":" functions to present a cover:"}]},{"type":"codeListing","syntax":"swift","code":["@StateObject var context = FullScreenCoverContext()","","view.fullScreenCover(context)","","context.present(Text(\"Hello, world!\"))","\/\/ ...or if an `AppCover` enum implements `FullScreenCoverProvider`:","context.present(AppCover.videoPlayer(url))"]}]}],"references":{"doc://SwiftUIKit/documentation/SwiftUIKit/SheetContextFocusedValueKey":{"role":"symbol","title":"SheetContextFocusedValueKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SheetContextFocusedValueKey"}],"abstract":[{"type":"text","text":"This key can be used to keep track of the currently focused"},{"type":"text","text":" "},{"type":"text","text":"sheet context."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetContextFocusedValueKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SheetContextFocusedValueKey"}],"url":"\/documentation\/swiftuikit\/sheetcontextfocusedvaluekey"},"doc://SwiftUIKit/documentation/SwiftUIKit/FullScreenCoverContext/present(_:)-8uwec":{"role":"symbol","title":"present(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"present"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Cover"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"Cover","preciseIdentifier":"s:10SwiftUIKit22FullScreenCoverContextC7presentyyxyXA0A2UI4ViewRzlF0E0L_xmfp"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContext\/present(_:)-8uwec","kind":"symbol","type":"topic","url":"\/documentation\/swiftuikit\/fullscreencovercontext\/present(_:)-8uwec"},"doc://SwiftUIKit/documentation/SwiftUIKit/ToastContext":{"deprecated":true,"role":"symbol","title":"ToastContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ToastContext"}],"abstract":[{"type":"text","text":"This context can be used to present any "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":" view as a"},{"type":"text","text":" "},{"type":"text","text":"toast overlay. You can present plain views or anything that"},{"type":"text","text":" "},{"type":"text","text":"implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ToastProvider"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ToastContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ToastContext"}],"url":"\/documentation\/swiftuikit\/toastcontext"},"doc://SwiftUIKit/7Combine16ObservableObjectP":{"type":"unresolvable","title":"Combine.ObservableObject","identifier":"doc:\/\/SwiftUIKit\/7Combine16ObservableObjectP"},"doc://SwiftUIKit/documentation/SwiftUIKit/PresentationContext":{"role":"symbol","title":"PresentationContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentationContext"}],"abstract":[{"type":"text","text":"This class is shared by many presentation-specific contexts,"},{"type":"text","text":" "},{"type":"text","text":"like "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertContext"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetContext"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ToastContext"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PresentationContext"}],"url":"\/documentation\/swiftuikit\/presentationcontext"},"doc://SwiftUIKit/documentation/SwiftUIKit/FullScreenCoverContextFocusedValueKey":{"role":"symbol","title":"FullScreenCoverContextFocusedValueKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FullScreenCoverContextFocusedValueKey"}],"abstract":[{"type":"text","text":"This key can be used to keep track of the currently focused"},{"type":"text","text":" "},{"type":"text","text":"full screen cover context."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContextFocusedValueKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FullScreenCoverContextFocusedValueKey"}],"url":"\/documentation\/swiftuikit\/fullscreencovercontextfocusedvaluekey"},"doc://SwiftUIKit/documentation/SwiftUIKit/AlertContext":{"role":"symbol","title":"AlertContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AlertContext"}],"abstract":[{"type":"text","text":"This context can be used to present "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":" "},{"type":"codeVoice","code":"Alert"},{"type":"text","text":"s. You"},{"type":"text","text":" "},{"type":"text","text":"can either present plain "},{"type":"codeVoice","code":"Alert"},{"type":"text","text":" instances or anything that"},{"type":"text","text":" "},{"type":"text","text":"implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertProvider"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AlertContext"}],"url":"\/documentation\/swiftuikit\/alertcontext"},"doc://SwiftUIKit/documentation/SwiftUIKit/FullScreenCoverContext/present(_:)-4azb5":{"role":"symbol","title":"present(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"present"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"FullScreenCoverProvider","preciseIdentifier":"s:10SwiftUIKit23FullScreenCoverProviderP"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContext\/present(_:)-4azb5","kind":"symbol","type":"topic","url":"\/documentation\/swiftuikit\/fullscreencovercontext\/present(_:)-4azb5"},"doc://SwiftUIKit/documentation/SwiftUIKit/FullScreenCoverContext":{"role":"symbol","title":"FullScreenCoverContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FullScreenCoverContext"}],"abstract":[{"type":"text","text":"This context can be used to present any "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":" view as a"},{"type":"text","text":" "},{"type":"text","text":"full screen cover. You can either present standard views or"},{"type":"text","text":" "},{"type":"text","text":"anything that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverProvider"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FullScreenCoverContext"}],"url":"\/documentation\/swiftuikit\/fullscreencovercontext"},"doc://SwiftUIKit/documentation/SwiftUIKit/FullScreenCoverProvider":{"role":"symbol","title":"FullScreenCoverProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FullScreenCoverProvider"}],"abstract":[{"type":"text","text":"This protocol can be implemented by anything (e.g. a struct,"},{"type":"text","text":" "},{"type":"text","text":"enum etc.) that can provide a full screen cover view."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FullScreenCoverProvider"}],"url":"\/documentation\/swiftuikit\/fullscreencoverprovider"},"doc://SwiftUIKit/documentation/SwiftUIKit/AlertProvider":{"role":"symbol","title":"AlertProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AlertProvider"}],"abstract":[{"type":"text","text":"This protocol can be implemented by anything (e.g. a struct,"},{"type":"text","text":" "},{"type":"text","text":"enum or class) that can provide a SwiftUI "},{"type":"codeVoice","code":"Alert"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AlertProvider"}],"url":"\/documentation\/swiftuikit\/alertprovider"},"doc://SwiftUIKit/documentation/SwiftUIKit/AlertContextFocusedValueKey":{"role":"symbol","title":"AlertContextFocusedValueKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AlertContextFocusedValueKey"}],"abstract":[{"type":"text","text":"This key can be used to keep track of the currently focused"},{"type":"text","text":" "},{"type":"text","text":"alert context."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertContextFocusedValueKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AlertContextFocusedValueKey"}],"url":"\/documentation\/swiftuikit\/alertcontextfocusedvaluekey"},"doc://SwiftUIKit/documentation/SwiftUIKit/FullScreenCoverContext/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContext\/init()","kind":"symbol","type":"topic","url":"\/documentation\/swiftuikit\/fullscreencovercontext\/init()"},"doc://SwiftUIKit/documentation/SwiftUIKit":{"role":"collection","title":"SwiftUIKit","abstract":[{"type":"text","text":"SwiftUIKit adds extra functionality to the SwiftUI framework, like extensions to native types, new views, pickers, utilites etc."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit","kind":"symbol","type":"topic","url":"\/documentation\/swiftuikit"},"doc://SwiftUIKit/documentation/SwiftUIKit/SheetContext":{"role":"symbol","title":"SheetContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SheetContext"}],"abstract":[{"type":"text","text":"This context can be used to present any "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":" view as a"},{"type":"text","text":" "},{"type":"text","text":"modal sheet. You can either present plain views or anything"},{"type":"text","text":" "},{"type":"text","text":"that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetProvider"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SheetContext"}],"url":"\/documentation\/swiftuikit\/sheetcontext"},"doc://SwiftUIKit/documentation/SwiftUIKit/SheetProvider":{"role":"symbol","title":"SheetProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SheetProvider"}],"abstract":[{"type":"text","text":"This protocol can be implemented by anything (e.g. a struct,"},{"type":"text","text":" "},{"type":"text","text":"enum etc.) that can provide a sheet view."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SheetProvider"}],"url":"\/documentation\/swiftuikit\/sheetprovider"}}}