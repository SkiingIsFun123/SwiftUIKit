{"seeAlsoSections":[{"title":"Presentation","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertContext","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertContextFocusedValueKey","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertProvider","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContext","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContextFocusedValueKey","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverProvider","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetContext","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetContextFocusedValueKey","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetProvider"],"generated":true}],"schemaVersion":{"major":0,"minor":2,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentationContext"}],"title":"PresentationContext","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:10SwiftUIKit19PresentationContextC","modules":[{"name":"SwiftUIKit"}],"navigatorTitle":[{"kind":"identifier","text":"PresentationContext"}]},"abstract":[{"type":"text","text":"This class is shared by many presentation-specific contexts,"},{"type":"text","text":" "},{"type":"text","text":"like "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertContext"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetContext"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ToastContext"},{"type":"text","text":"."}],"sections":[],"identifier":{"url":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertContext","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContext","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetContext","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ToastContext"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"identifiers":["doc:\/\/SwiftUIKit\/7Combine16ObservableObjectP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext\/init()"]},{"title":"Instance Properties","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext\/content","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext\/isActive","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext\/isActiveBinding"]},{"title":"Instance Methods","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext\/dismiss()","doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext\/presentContent(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext\/ObservableObject-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/swiftuikit\/presentationcontext"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentationContext"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Content"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The context can be used to manage a generic view as well as"},{"type":"text","text":" "},{"type":"text","text":"its presentation state."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use the context, first create an observed instance, then"},{"type":"text","text":" "},{"type":"text","text":"bind it to a presentation-specific view modifier that takes"},{"type":"text","text":" "},{"type":"text","text":"an "},{"type":"codeVoice","code":"isPresented"},{"type":"text","text":" binding and a "},{"type":"codeVoice","code":"content"},{"type":"text","text":" view builder, then"},{"type":"text","text":" "},{"type":"text","text":"call any of the contextâ€™s "},{"type":"codeVoice","code":"present"},{"type":"text","text":" functions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For instance, using a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetContext"},{"type":"text","text":" involves these steps:"}]},{"type":"codeListing","syntax":"swift","code":["@StateObject var context = SheetContext()","","view.sheet(context)","","context.present(Text(\"Hello, world!\"))"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Have a look at more specific contexts for more information."}]}]}],"references":{"doc://SwiftUIKit/documentation/SwiftUIKit/FullScreenCoverContextFocusedValueKey":{"role":"symbol","title":"FullScreenCoverContextFocusedValueKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FullScreenCoverContextFocusedValueKey"}],"abstract":[{"type":"text","text":"This key can be used to keep track of the currently focused"},{"type":"text","text":" "},{"type":"text","text":"full screen cover context."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContextFocusedValueKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FullScreenCoverContextFocusedValueKey"}],"url":"\/documentation\/swiftuikit\/fullscreencovercontextfocusedvaluekey"},"doc://SwiftUIKit/documentation/SwiftUIKit/PresentationContext/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext\/init()","kind":"symbol","type":"topic","url":"\/documentation\/swiftuikit\/presentationcontext\/init()"},"doc://SwiftUIKit/documentation/SwiftUIKit/PresentationContext/ObservableObject-Implementations":{"role":"collectionGroup","title":"ObservableObject Implementations","abstract":[],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext\/ObservableObject-Implementations","kind":"article","type":"topic","url":"\/documentation\/swiftuikit\/presentationcontext\/observableobject-implementations"},"doc://SwiftUIKit/documentation/SwiftUIKit/SheetContext":{"role":"symbol","title":"SheetContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SheetContext"}],"abstract":[{"type":"text","text":"This context can be used to present any "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":" view as a"},{"type":"text","text":" "},{"type":"text","text":"modal sheet. You can either present plain views or anything"},{"type":"text","text":" "},{"type":"text","text":"that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetProvider"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SheetContext"}],"url":"\/documentation\/swiftuikit\/sheetcontext"},"doc://SwiftUIKit/documentation/SwiftUIKit/PresentationContext/content":{"role":"symbol","title":"content","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"content"},{"kind":"text","text":": (() -> "},{"kind":"typeIdentifier","text":"Content","preciseIdentifier":"s:10SwiftUIKit19PresentationContextC7Contentxmfp"},{"kind":"text","text":")?"}],"abstract":[],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext\/content","kind":"symbol","type":"topic","url":"\/documentation\/swiftuikit\/presentationcontext\/content"},"doc://SwiftUIKit/documentation/SwiftUIKit/PresentationContext/isActive":{"role":"symbol","title":"isActive","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isActive"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext\/isActive","kind":"symbol","type":"topic","url":"\/documentation\/swiftuikit\/presentationcontext\/isactive"},"doc://SwiftUIKit/documentation/SwiftUIKit/FullScreenCoverContext":{"role":"symbol","title":"FullScreenCoverContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FullScreenCoverContext"}],"abstract":[{"type":"text","text":"This context can be used to present any "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":" view as a"},{"type":"text","text":" "},{"type":"text","text":"full screen cover. You can either present standard views or"},{"type":"text","text":" "},{"type":"text","text":"anything that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverProvider"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FullScreenCoverContext"}],"url":"\/documentation\/swiftuikit\/fullscreencovercontext"},"doc://SwiftUIKit/documentation/SwiftUIKit/PresentationContext/isActiveBinding":{"role":"symbol","title":"isActiveBinding","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isActiveBinding"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext\/isActiveBinding","kind":"symbol","type":"topic","url":"\/documentation\/swiftuikit\/presentationcontext\/isactivebinding"},"doc://SwiftUIKit/documentation/SwiftUIKit/PresentationContext/dismiss()":{"role":"symbol","title":"dismiss()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dismiss"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext\/dismiss()","kind":"symbol","type":"topic","url":"\/documentation\/swiftuikit\/presentationcontext\/dismiss()"},"doc://SwiftUIKit/documentation/SwiftUIKit/AlertContextFocusedValueKey":{"role":"symbol","title":"AlertContextFocusedValueKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AlertContextFocusedValueKey"}],"abstract":[{"type":"text","text":"This key can be used to keep track of the currently focused"},{"type":"text","text":" "},{"type":"text","text":"alert context."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertContextFocusedValueKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AlertContextFocusedValueKey"}],"url":"\/documentation\/swiftuikit\/alertcontextfocusedvaluekey"},"doc://SwiftUIKit/documentation/SwiftUIKit/AlertContext":{"role":"symbol","title":"AlertContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AlertContext"}],"abstract":[{"type":"text","text":"This context can be used to present "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":" "},{"type":"codeVoice","code":"Alert"},{"type":"text","text":"s. You"},{"type":"text","text":" "},{"type":"text","text":"can either present plain "},{"type":"codeVoice","code":"Alert"},{"type":"text","text":" instances or anything that"},{"type":"text","text":" "},{"type":"text","text":"implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertProvider"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AlertContext"}],"url":"\/documentation\/swiftuikit\/alertcontext"},"doc://SwiftUIKit/documentation/SwiftUIKit/PresentationContext":{"role":"symbol","title":"PresentationContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentationContext"}],"abstract":[{"type":"text","text":"This class is shared by many presentation-specific contexts,"},{"type":"text","text":" "},{"type":"text","text":"like "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertContext"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetContext"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ToastContext"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PresentationContext"}],"url":"\/documentation\/swiftuikit\/presentationcontext"},"doc://SwiftUIKit/documentation/SwiftUIKit":{"role":"collection","title":"SwiftUIKit","abstract":[{"type":"text","text":"SwiftUIKit adds extra functionality to the SwiftUI framework, like extensions to native types, new views, pickers, utilites etc."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit","kind":"symbol","type":"topic","url":"\/documentation\/swiftuikit"},"doc://SwiftUIKit/documentation/SwiftUIKit/ToastContext":{"deprecated":true,"role":"symbol","title":"ToastContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ToastContext"}],"abstract":[{"type":"text","text":"This context can be used to present any "},{"type":"codeVoice","code":"SwiftUI"},{"type":"text","text":" view as a"},{"type":"text","text":" "},{"type":"text","text":"toast overlay. You can present plain views or anything that"},{"type":"text","text":" "},{"type":"text","text":"implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ToastProvider"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ToastContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ToastContext"}],"url":"\/documentation\/swiftuikit\/toastcontext"},"doc://SwiftUIKit/documentation/SwiftUIKit/SheetProvider":{"role":"symbol","title":"SheetProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SheetProvider"}],"abstract":[{"type":"text","text":"This protocol can be implemented by anything (e.g. a struct,"},{"type":"text","text":" "},{"type":"text","text":"enum etc.) that can provide a sheet view."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SheetProvider"}],"url":"\/documentation\/swiftuikit\/sheetprovider"},"doc://SwiftUIKit/documentation/SwiftUIKit/AlertProvider":{"role":"symbol","title":"AlertProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AlertProvider"}],"abstract":[{"type":"text","text":"This protocol can be implemented by anything (e.g. a struct,"},{"type":"text","text":" "},{"type":"text","text":"enum or class) that can provide a SwiftUI "},{"type":"codeVoice","code":"Alert"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/AlertProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AlertProvider"}],"url":"\/documentation\/swiftuikit\/alertprovider"},"doc://SwiftUIKit/documentation/SwiftUIKit/FullScreenCoverProvider":{"role":"symbol","title":"FullScreenCoverProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FullScreenCoverProvider"}],"abstract":[{"type":"text","text":"This protocol can be implemented by anything (e.g. a struct,"},{"type":"text","text":" "},{"type":"text","text":"enum etc.) that can provide a full screen cover view."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/FullScreenCoverProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FullScreenCoverProvider"}],"url":"\/documentation\/swiftuikit\/fullscreencoverprovider"},"doc://SwiftUIKit/documentation/SwiftUIKit/ToastProvider":{"deprecated":true,"role":"symbol","title":"ToastProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ToastProvider"}],"abstract":[{"type":"text","text":"This protocol can be implemented by anything (e.g. a struct,"},{"type":"text","text":" "},{"type":"text","text":"enum etc.) that can provide a toast view."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/ToastProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ToastProvider"}],"url":"\/documentation\/swiftuikit\/toastprovider"},"doc://SwiftUIKit/documentation/SwiftUIKit/PresentationContext/presentContent(_:)":{"role":"symbol","title":"presentContent(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"presentContent"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Content","preciseIdentifier":"s:10SwiftUIKit19PresentationContextC7Contentxmfp"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/PresentationContext\/presentContent(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftuikit\/presentationcontext\/presentcontent(_:)"},"doc://SwiftUIKit/documentation/SwiftUIKit/SheetContextFocusedValueKey":{"role":"symbol","title":"SheetContextFocusedValueKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SheetContextFocusedValueKey"}],"abstract":[{"type":"text","text":"This key can be used to keep track of the currently focused"},{"type":"text","text":" "},{"type":"text","text":"sheet context."}],"identifier":"doc:\/\/SwiftUIKit\/documentation\/SwiftUIKit\/SheetContextFocusedValueKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SheetContextFocusedValueKey"}],"url":"\/documentation\/swiftuikit\/sheetcontextfocusedvaluekey"},"doc://SwiftUIKit/7Combine16ObservableObjectP":{"type":"unresolvable","title":"Combine.ObservableObject","identifier":"doc:\/\/SwiftUIKit\/7Combine16ObservableObjectP"}}}